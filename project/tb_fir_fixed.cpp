#include <iostream>
#include <fstream>
#include <math.h>
#include "fir_filter.h"
using namespace std;

#define PI 3.14152
#define SIG_LEN 1000

double sum_sq(double x[SIG_LEN]){
  double tmp = 0;
  for(int i=0;i<SIG_LEN;i++)
    tmp += x[i]*x[i];
  return tmp;
}

void error(double x_r[SIG_LEN], double xfx_r[SIG_LEN], double e[SIG_LEN]){
  for(int i=0;i<SIG_LEN;i++){
    e[i] = x_r[i] - xfx_r[i];
   
  }
}

int main() {
  ofstream iptr("input.txt");
  ofstream fptr_d("output_double.txt");
  ofstream fptr_f("output_fixed.txt");
  double x;
  double y[SIG_LEN];
  double y_fd[SIG_LEN];
  out_t y_f;
  sig_t x_f;
  double signal;
  double err[SIG_LEN];
  double noise;
  double SQNR;



  	  //double h[TAPS] = {0.30111, 0.90132, 0.90132, 0.30111};
  	  double h[TAPS]={ 0.00055 , 0.00154 , 0.00030 , -0.00034 , 0.00082 , 0.00116 , 0.00027 , 0.00023 , 0.00074 , 0.00064 , 0.00071 , 0.00084 , 0.00014 , 0.00026 , 0.00174 , 0.00116 , -0.00103 , 0.00040 , 0.00333 , 0.00079 , -0.00263 , 0.00147 , 0.00525 , -0.00068, -0.00431 , 0.00392 , 0.00705 , -0.00362 , -0.00547 , 0.00809 , 0.00807 , -0.00833 , -0.00525 , 0.01435 , 0.00736 , -0.01509 , -0.00236 , 0.02329 , 0.00344 , -0.02467 , 0.00568 , 0.03694 , -0.00718 , -0.04036 , 0.02734 , 0.06593 , -0.04238 , -0.08990, 0.15869 , 0.48046 , 0.44942 , 0.10135 , -0.11969 , -0.04422 , 0.05950 , 0.01058 , -0.04957 , -0.00764 , 0.03177 , -0.00400 , -0.02898 , 0.00286 , 0.01869 , -0.00873 , -0.01740 , 0.00639 , 0.01029 , -0.00958 , -0.00976 , 0.00673 , 0.00461 , -0.00846, -0.00473 , 0.00547 , 0.00105 , -0.00644 , -0.00174 , 0.00358 , -0.00081 , -0.00424 , -0.00033 , 0.00172 , -0.00140 , -0.00237 , -0.00003 , 0.00030 , -0.00116 , -0.00109 , -0.00037 , -0.00052 , -0.00054 , -0.00045 , -0.00093 , -0.00075 , 0.00011 , -0.00035, -0.00139 , -0.00056 , 0.00055 , -0.00059 };
  	  //tap_t h_f[TAPS] ={0.30111, 0.90132, 0.90132, 0.30111};

  	  //filter coefficients
  	  tap_t h_f[TAPS] = { 0.00055 , 0.00154 , 0.00030 , -0.00034 , 0.00082 , 0.00116 , 0.00027 , 0.00023 , 0.00074 , 0.00064 , 0.00071 , 0.00084 , 0.00014 , 0.00026 , 0.00174 , 0.00116 , -0.00103 , 0.00040 , 0.00333 , 0.00079 , -0.00263 , 0.00147 , 0.00525 , -0.00068, -0.00431 , 0.00392 , 0.00705 , -0.00362 , -0.00547 , 0.00809 , 0.00807 , -0.00833 , -0.00525 , 0.01435 , 0.00736 , -0.01509 , -0.00236 , 0.02329 , 0.00344 , -0.02467 , 0.00568 , 0.03694 , -0.00718 , -0.04036 , 0.02734 , 0.06593 , -0.04238 , -0.08990, 0.15869 , 0.48046 , 0.44942 , 0.10135 , -0.11969 , -0.04422 , 0.05950 , 0.01058 , -0.04957 , -0.00764 , 0.03177 , -0.00400 , -0.02898 , 0.00286 , 0.01869 , -0.00873 , -0.01740 , 0.00639 , 0.01029 , -0.00958 , -0.00976 , 0.00673 , 0.00461 , -0.00846, -0.00473 , 0.00547 , 0.00105 , -0.00644 , -0.00174 , 0.00358 , -0.00081 , -0.00424 , -0.00033 , 0.00172 , -0.00140 , -0.00237 , -0.00003 , 0.00030 , -0.00116 , -0.00109 , -0.00037 , -0.00052 , -0.00054 , -0.00045 , -0.00093 , -0.00075 , 0.00011 , -0.00035, -0.00139 , -0.00056 , 0.00055 , -0.00059 };



  	  for (int i = 0; i < SIG_LEN; i++ ) {
    x_f = (sin(2*PI*i/64)+sin(2*PI*i/128)+sin(2*PI*i/32)+sin(2*PI*(double)i/(double)3))/4;
    x = x_f.to_double();
    iptr << x_f << endl;
    fir_double(x, h, &y[i]);
    fir_fixed(x_f, h_f, &y_f);
    y_fd[i] = y_f.to_double();
    fptr_d << y[i] << endl;
    fptr_f << y_fd[i] << endl;
  }

  signal = sum_sq(y);
  error(y,y_fd,err);
  noise = sum_sq(err);

  SQNR = 20*log10(signal/noise);
  cout << "signal = " << signal << " dB" << endl;
  cout << "noise = " << noise << " dB" << endl;
  cout << "SQNR = " << SQNR << " dB" << endl;
}


